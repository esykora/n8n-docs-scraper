{
  "name": "n8n API Tools for AI Agents - Cloud Version",
  "nodes": [
    {
      "parameters": {},
      "id": "agent-trigger",
      "name": "Agent / MCP Server Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [260, 600],
      "notes": "Replace this with:\n- @n8n/n8n-nodes-langchain.agent\n- Or MCP Server Trigger node\n\nThe tools will connect to the 'Tools' input of the Agent node"
    },
    {
      "parameters": {
        "name": "list_workflows",
        "description": "List all workflows in n8n. Returns array of workflow summaries with id, name, active status, and tags.",
        "method": "GET",
        "url": "={{ $vars.N8N_API_URL }}/workflows",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "limit",
              "description": "Maximum number of workflows to return (default: 100)",
              "default": "100"
            },
            {
              "name": "active",
              "description": "Filter by active status (true/false)",
              "default": ""
            },
            {
              "name": "tags",
              "description": "Filter by tags (comma-separated)",
              "default": ""
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 100 }}"
            },
            {
              "name": "active",
              "value": "={{ $('agent-trigger').item.json.active || '' }}"
            },
            {
              "name": "tags",
              "value": "={{ $('agent-trigger').item.json.tags || '' }}"
            }
          ]
        }
      },
      "id": "tool-list-workflows",
      "name": "List Workflows",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 100],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "search_workflows",
        "description": "Search for workflows by name or description. Requires a search query string.",
        "method": "GET",
        "url": "={{ $vars.N8N_API_URL }}/workflows",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchQuery",
              "description": "Search term to find workflows",
              "required": true
            },
            {
              "name": "limit",
              "description": "Maximum results to return",
              "default": "50"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "search",
              "value": "={{ $('agent-trigger').item.json.searchQuery }}"
            },
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 50 }}"
            }
          ]
        }
      },
      "id": "tool-search-workflows",
      "name": "Search Workflows",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 220],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "get_workflow",
        "description": "Get detailed information about a specific workflow including nodes, connections, and settings.",
        "method": "GET",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "The ID of the workflow to retrieve",
              "required": true
            }
          ]
        }
      },
      "id": "tool-get-workflow",
      "name": "Get Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 340],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "create_workflow",
        "description": "Create a new workflow in n8n. Requires workflow configuration with name, nodes, and connections.",
        "method": "POST",
        "url": "={{ $vars.N8N_API_URL }}/workflows",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.workflowData) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowData",
              "description": "Complete workflow object with name, nodes, connections, settings",
              "required": true
            }
          ]
        }
      },
      "id": "tool-create-workflow",
      "name": "Create Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 460],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "update_workflow",
        "description": "Update an existing workflow. Can update name, nodes, connections, settings, or active status.",
        "method": "PATCH",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.updateData) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to update",
              "required": true
            },
            {
              "name": "updateData",
              "description": "Partial workflow object with fields to update",
              "required": true
            }
          ]
        }
      },
      "id": "tool-update-workflow",
      "name": "Update Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 580],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "delete_workflow",
        "description": "Delete a workflow permanently. This cannot be undone.",
        "method": "DELETE",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to delete",
              "required": true
            }
          ]
        }
      },
      "id": "tool-delete-workflow",
      "name": "Delete Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 700],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "execute_workflow",
        "description": "Execute a workflow immediately with optional input data. Returns execution ID and status.",
        "method": "POST",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/execute",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.executionData || {}) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to execute",
              "required": true
            },
            {
              "name": "executionData",
              "description": "Optional input data for the workflow execution",
              "default": "{}"
            }
          ]
        }
      },
      "id": "tool-execute-workflow",
      "name": "Execute Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 820],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "activate_workflow",
        "description": "Activate a workflow to enable triggers and scheduled executions.",
        "method": "PATCH",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/activate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to activate",
              "required": true
            }
          ]
        }
      },
      "id": "tool-activate-workflow",
      "name": "Activate Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 940],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "deactivate_workflow",
        "description": "Deactivate a workflow to disable triggers and scheduled executions.",
        "method": "PATCH",
        "url": "={{ $vars.N8N_API_URL }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/deactivate",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to deactivate",
              "required": true
            }
          ]
        }
      },
      "id": "tool-deactivate-workflow",
      "name": "Deactivate Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1060],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "list_executions",
        "description": "List workflow executions with optional filters for workflow ID, status, and limit.",
        "method": "GET",
        "url": "={{ $vars.N8N_API_URL }}/executions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "Filter by workflow ID (optional)",
              "default": ""
            },
            {
              "name": "status",
              "description": "Filter by status: success, error, running (optional)",
              "default": ""
            },
            {
              "name": "limit",
              "description": "Maximum number of executions to return",
              "default": "100"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "workflowId",
              "value": "={{ $('agent-trigger').item.json.workflowId || '' }}"
            },
            {
              "name": "status",
              "value": "={{ $('agent-trigger').item.json.status || '' }}"
            },
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 100 }}"
            }
          ]
        }
      },
      "id": "tool-list-executions",
      "name": "List Executions",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1180],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "name": "get_execution",
        "description": "Get detailed information about a specific workflow execution including all node outputs.",
        "method": "GET",
        "url": "={{ $vars.N8N_API_URL }}/executions/{{ $('agent-trigger').item.json.executionId }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "executionId",
              "description": "ID of the execution to retrieve",
              "required": true
            }
          ]
        }
      },
      "id": "tool-get-execution",
      "name": "Get Execution",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1300],
      "credentials": {
        "httpHeaderAuth": {
          "id": "{{credentialId}}",
          "name": "n8n API Header Auth"
        }
      }
    },
    {
      "parameters": {
        "content": "## IMPORTANT: n8n Cloud Setup Instructions\n\n### 1. Create Variables (Required)\nGo to Settings → Variables and create:\n```\nName: N8N_API_URL\nValue: https://[your-instance].app.n8n.cloud/api/v1\n```\n\n### 2. Create Header Auth Credential\n1. Go to Credentials → Add Credential\n2. Search for \"Header Auth\"\n3. Configure:\n   - Name: `n8n API Header Auth`\n   - Header Name: `X-N8N-API-KEY`\n   - Header Value: `[your-api-key]`\n\n### 3. Get Your API Key\n1. Go to Settings → API\n2. Click \"Create API Key\"\n3. Copy immediately (won't show again!)\n\n### 4. After Import\n- Select the \"n8n API Header Auth\" credential in each tool node\n- The credential should already be set if named exactly as above\n\n### ⚠️ Cloud Restrictions\n- Cannot use $env variables (blocked)\n- Must use $vars for variables\n- Must use proper credentials for auth\n\n### Testing\n1. Replace Manual Trigger with Agent node\n2. Connect all tools to Agent's \"Tools\" input\n3. Test with: \"List all my workflows\"",
        "width": 600,
        "height": 700,
        "color": 1
      },
      "id": "cloud-setup-note",
      "name": "CLOUD SETUP - READ THIS",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [800, 100]
    }
  ],
  "connections": {},
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cloud-1.0.0",
  "meta": {
    "templateCredsSetupCompleted": false,
    "instanceId": "n8n-api-tools-cloud"
  },
  "id": "n8n-api-tools-cloud",
  "tags": [
    {
      "name": "API",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    },
    {
      "name": "Cloud",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    },
    {
      "name": "AI-Tools",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ]
}
