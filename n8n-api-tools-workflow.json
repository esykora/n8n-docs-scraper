{
  "name": "n8n API Tools for AI Agents",
  "nodes": [
    {
      "parameters": {},
      "id": "agent-trigger",
      "name": "Agent / MCP Server Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [260, 600],
      "notes": "Replace this with:\n- @n8n/n8n-nodes-langchain.agent\n- Or MCP Server Trigger node\n\nThe tools will connect to the 'Tools' input of the Agent node"
    },
    {
      "parameters": {
        "name": "list_workflows",
        "description": "List all workflows in n8n. Returns array of workflow summaries with id, name, active status, and tags.",
        "method": "GET",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "limit",
              "description": "Maximum number of workflows to return (default: 100)",
              "default": "100"
            },
            {
              "name": "active",
              "description": "Filter by active status (true/false)",
              "default": ""
            },
            {
              "name": "tags",
              "description": "Filter by tags (comma-separated)",
              "default": ""
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 100 }}"
            },
            {
              "name": "active",
              "value": "={{ $('agent-trigger').item.json.active || '' }}"
            },
            {
              "name": "tags",
              "value": "={{ $('agent-trigger').item.json.tags || '' }}"
            }
          ]
        }
      },
      "id": "tool-list-workflows",
      "name": "List Workflows",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 100]
    },
    {
      "parameters": {
        "name": "search_workflows",
        "description": "Search for workflows by name or description. Requires a search query string.",
        "method": "GET",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchQuery",
              "description": "Search term to find workflows",
              "required": true
            },
            {
              "name": "limit",
              "description": "Maximum results to return",
              "default": "50"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "search",
              "value": "={{ $('agent-trigger').item.json.searchQuery }}"
            },
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 50 }}"
            }
          ]
        }
      },
      "id": "tool-search-workflows",
      "name": "Search Workflows",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 220]
    },
    {
      "parameters": {
        "name": "get_workflow",
        "description": "Get detailed information about a specific workflow including nodes, connections, and settings.",
        "method": "GET",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "The ID of the workflow to retrieve",
              "required": true
            }
          ]
        }
      },
      "id": "tool-get-workflow",
      "name": "Get Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 340]
    },
    {
      "parameters": {
        "name": "create_workflow",
        "description": "Create a new workflow in n8n. Requires workflow configuration with name, nodes, and connections.",
        "method": "POST",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.workflowData) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowData",
              "description": "Complete workflow object with name, nodes, connections, settings",
              "required": true
            }
          ]
        }
      },
      "id": "tool-create-workflow",
      "name": "Create Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 460]
    },
    {
      "parameters": {
        "name": "update_workflow",
        "description": "Update an existing workflow. Can update name, nodes, connections, settings, or active status.",
        "method": "PATCH",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.updateData) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to update",
              "required": true
            },
            {
              "name": "updateData",
              "description": "Partial workflow object with fields to update",
              "required": true
            }
          ]
        }
      },
      "id": "tool-update-workflow",
      "name": "Update Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 580]
    },
    {
      "parameters": {
        "name": "delete_workflow",
        "description": "Delete a workflow permanently. This cannot be undone.",
        "method": "DELETE",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to delete",
              "required": true
            }
          ]
        }
      },
      "id": "tool-delete-workflow",
      "name": "Delete Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 700]
    },
    {
      "parameters": {
        "name": "execute_workflow",
        "description": "Execute a workflow immediately with optional input data. Returns execution ID and status.",
        "method": "POST",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/execute",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify($('agent-trigger').item.json.executionData || {}) }}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to execute",
              "required": true
            },
            {
              "name": "executionData",
              "description": "Optional input data for the workflow execution",
              "default": "{}"
            }
          ]
        }
      },
      "id": "tool-execute-workflow",
      "name": "Execute Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 820]
    },
    {
      "parameters": {
        "name": "activate_workflow",
        "description": "Activate a workflow to enable triggers and scheduled executions.",
        "method": "PATCH",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/activate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to activate",
              "required": true
            }
          ]
        }
      },
      "id": "tool-activate-workflow",
      "name": "Activate Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 940]
    },
    {
      "parameters": {
        "name": "deactivate_workflow",
        "description": "Deactivate a workflow to disable triggers and scheduled executions.",
        "method": "PATCH",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/workflows/{{ $('agent-trigger').item.json.workflowId }}/deactivate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "ID of the workflow to deactivate",
              "required": true
            }
          ]
        }
      },
      "id": "tool-deactivate-workflow",
      "name": "Deactivate Workflow",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1060]
    },
    {
      "parameters": {
        "name": "list_executions",
        "description": "List workflow executions with optional filters for workflow ID, status, and limit.",
        "method": "GET",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/executions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "workflowId",
              "description": "Filter by workflow ID (optional)",
              "default": ""
            },
            {
              "name": "status",
              "description": "Filter by status: success, error, running (optional)",
              "default": ""
            },
            {
              "name": "limit",
              "description": "Maximum number of executions to return",
              "default": "100"
            }
          ]
        },
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "workflowId",
              "value": "={{ $('agent-trigger').item.json.workflowId || '' }}"
            },
            {
              "name": "status",
              "value": "={{ $('agent-trigger').item.json.status || '' }}"
            },
            {
              "name": "limit",
              "value": "={{ $('agent-trigger').item.json.limit || 100 }}"
            }
          ]
        }
      },
      "id": "tool-list-executions",
      "name": "List Executions",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1180]
    },
    {
      "parameters": {
        "name": "get_execution",
        "description": "Get detailed information about a specific workflow execution including all node outputs.",
        "method": "GET",
        "url": "={{ $env.N8N_API_URL || 'http://localhost:5678/api/v1' }}/executions/{{ $('agent-trigger').item.json.executionId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "={{ $env.N8N_API_KEY }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "executionId",
              "description": "ID of the execution to retrieve",
              "required": true
            }
          ]
        }
      },
      "id": "tool-get-execution",
      "name": "Get Execution",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [500, 1300]
    },
    {
      "parameters": {
        "content": "## n8n API Tools for AI Agents\n\n### How to Use These Tools\n\n1. **Replace the Manual Trigger** with:\n   - **AI Agent Node**: `@n8n/n8n-nodes-langchain.agent`\n   - **MCP Server Trigger**: For MCP integration\n   - **Chat Trigger**: For conversational interfaces\n\n2. **Connect Tools to Agent**:\n   - All tool nodes connect to the \"Tools\" input of the Agent node\n   - The Agent will automatically discover and use them\n\n3. **Configure Environment Variables**:\n   ```bash\n   N8N_API_URL=http://localhost:5678/api/v1\n   N8N_API_KEY=your-api-key-here\n   ```\n\n### Tool Capabilities\n\n| Tool | Description | Required Params |\n|------|-------------|----------------|\n| `list_workflows` | List all workflows | None |\n| `search_workflows` | Search by name/description | searchQuery |\n| `get_workflow` | Get workflow details | workflowId |\n| `create_workflow` | Create new workflow | workflowData |\n| `update_workflow` | Update existing workflow | workflowId, updateData |\n| `delete_workflow` | Delete workflow | workflowId |\n| `execute_workflow` | Run a workflow | workflowId |\n| `activate_workflow` | Enable workflow | workflowId |\n| `deactivate_workflow` | Disable workflow | workflowId |\n| `list_executions` | List execution history | None |\n| `get_execution` | Get execution details | executionId |\n\n### Example Agent System Prompt\n\n```\nYou are an n8n workflow manager with access to the n8n API.\nYou can:\n- List, search, and retrieve workflows\n- Create new workflows from descriptions\n- Update and manage existing workflows\n- Execute workflows on demand\n- Monitor execution history\n\nWhen creating workflows, ensure proper node structure and connections.\n```",
        "width": 600,
        "height": 1400,
        "color": 4
      },
      "id": "instructions-note",
      "name": "Setup Instructions",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [800, 100]
    },
    {
      "parameters": {
        "content": "## Example Workflow Creation\n\nWhen the agent needs to create a workflow, it should provide:\n\n```json\n{\n  \"workflowData\": {\n    \"name\": \"Example Workflow\",\n    \"nodes\": [\n      {\n        \"id\": \"uuid-1\",\n        \"name\": \"Start\",\n        \"type\": \"n8n-nodes-base.start\",\n        \"typeVersion\": 1,\n        \"position\": [250, 300]\n      },\n      {\n        \"id\": \"uuid-2\",\n        \"name\": \"Set\",\n        \"type\": \"n8n-nodes-base.set\",\n        \"typeVersion\": 3,\n        \"position\": [450, 300],\n        \"parameters\": {\n          \"assignments\": {\n            \"assignments\": [\n              {\n                \"id\": \"uuid-3\",\n                \"name\": \"message\",\n                \"value\": \"Hello World\",\n                \"type\": \"string\"\n              }\n            ]\n          }\n        }\n      }\n    ],\n    \"connections\": {\n      \"Start\": {\n        \"main\": [\n          [\n            {\n              \"node\": \"Set\",\n              \"type\": \"main\",\n              \"index\": 0\n            }\n          ]\n        ]\n      }\n    },\n    \"active\": false,\n    \"settings\": {\n      \"executionOrder\": \"v1\"\n    }\n  }\n}\n```",
        "width": 400,
        "height": 600,
        "color": 5
      },
      "id": "example-note",
      "name": "Example Data Structure",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1450, 100]
    }
  ],
  "connections": {},
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2.0.0",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "n8n-api-tools"
  },
  "id": "n8n-api-tools-v2",
  "tags": [
    {
      "name": "API",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    },
    {
      "name": "AI-Tools",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    },
    {
      "name": "Agent",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    },
    {
      "name": "MCP",
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z"
    }
  ]
}
